services:
  postgresql:
    image: postgres:15
    container_name: postgresql
    restart: always
    env_file:
      - .env
    environment:
      TZ: "Asia/Jakarta"
    ports:
      - "192.168.18.161:5432:5432"
      - "100.87.21.83:5432:5432"
    volumes:
      - ./postgres:/var/lib/postgresql/data
      - ./postgres-config/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./postgres-config/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
      - ./logs/postgresql:/var/log/postgresql
    command: postgres -c config_file=/etc/postgresql/postgresql.conf -c hba_file=/etc/postgresql/pg_hba.conf
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "14"
    networks:
      - database_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: always
    env_file:
      - .env
    environment:
      TZ: "Asia/Jakarta"
    command: server /data --console-address ":9001"
    ports:
      - "192.168.18.161:9000:9000"
      - "100.87.21.83:9000:9000"
      - "192.168.18.161:9001:9001"
      - "100.87.21.83:9001:9001"
    volumes:
      - ./minio:/data
      - ./logs/minio:/var/log/minio
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "14"
    networks:
      - database_network
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  database_network:
    name: database_network
    driver: bridge